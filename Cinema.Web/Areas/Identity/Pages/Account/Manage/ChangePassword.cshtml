@page
@model Cinema.API.Areas.Identity.Pages.Account.Manage.ChangePasswordModel
@{
    ViewData["Title"] = "Сменить пароль";
}

<h4>@ViewData["Title"]</h4>

<div class="row">
    <div class="col-md-6">
        <form id="change-password-form">
            <div class="form-group">
                <label for="oldPassword">Текущий пароль</label>
                <input id="oldPassword" name="Input.OldPassword" type="password" class="form-control" required />
            </div>
            <div class="form-group">
                <label for="newPassword">Новый пароль</label>
                <input id="newPassword" name="Input.NewPassword" type="password" class="form-control" required minlength="6" />
            </div>
            <div class="form-group">
                <label for="confirmPassword">Подтверждение нового пароля</label>
                <input id="confirmPassword" name="Input.ConfirmPassword" type="password" class="form-control" required />
            </div>
            <button type="submit" class="btn btn-default">Сменить пароль</button>
        </form>
    </div>
</div>
<a id="logout-link" asp-area="Identity" asp-page="/Account/Logout" style="display: none;"></a>
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const changePasswordForm = document.getElementById('change-password-form');
            if (!changePasswordForm) return;

            changePasswordForm.addEventListener('submit', async (e) => {
                e.preventDefault();

                const token = localStorage.getItem('token');
                if (!token) {
                    alert('Вы не авторизованы.');
                    return;
                }

                const oldPassword = document.querySelector('[name="Input.OldPassword"]').value;
                const newPassword = document.querySelector('[name="Input.NewPassword"]').value;
                const confirmPassword = document.querySelector('[name="Input.ConfirmPassword"]').value;

                if (newPassword !== confirmPassword) {
                    alert('Пароли не совпадают.');
                    return;
                }

                try {
                    const response = await fetch('/api/User/ChangePassword', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${token.accessToken}`,
                        },
                        body: JSON.stringify({ oldPassword, newPassword }),
                    });

                    if (response.ok) {
                        alert('Пароль успешно изменён.');
                        localStorage.removeItem('token');
                        const logoutLink = document.getElementById('logout-link');
                        if (logoutLink) {
                            const   logoutUrl = logoutLink.getAttribute('href');
                                    localStorage.removeItem('token');
                                    window.location.href = logoutUrl;
                        } else {
                            console.error('Ошибка: Ссылка на выход не найдена!');
                        }
                    } else {
                        const errors = await response.json();
                        alert(`Ошибка: ${Array.isArray(errors) ? errors.join('\n') : errors}`);
                    }
                } catch (error) {
                    console.error('Ошибка при выполнении запроса:', error);
                    alert('Произошла ошибка при смене пароля.');
                }
            });
        });
    </script>
}